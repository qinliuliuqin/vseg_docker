[General]

# Pad the bounding box of coarse segmentation as the ROI for fine segmentation
# Options:
# 1) W,H,D: the same padding along each direction in both sides
# 2) W1,W2,H1,H2,D1,D2: different padding in different sides
pad_mm = 0,0,0

# Run segmentation in single scale mode
# Options:
# 1) DISABLE: as the name suggests
# 2) coarse: run coarse segmentation model
# 3) fine: run fine segmentation model
# 4) arbitrary name: run the model saved with this name
single_scale = DISABLE

# plugin Options:
# 1) DISABLE: no plugin for preprocess or postprocess
# 2) mrbrain: mr brain plugin
# 3) ctbrain: ct brain plugin
# 4) skin: skin plugin
# 5) stomach: stomach plugin
plugin = DISABLE

# Output single channel's prob map
# If single_scale is DISABLE, the prob map from fine model
# Options:
# 1) DISABLE: no output prob map
# 2) A numerical value: a number of channel
output_prob_index = DISABLE

[coarse]

# Pick the largest connected component (cc) in segmentation
# Options:
# 1) True: pick largest connected component
# 2) False: not pick largest connected component
largest_cc = True

# Remove small connected component (cc) in segmentation
# Options:
# 1) DISABLE: as the name suggests
# 2) a numerical number: the threshold size of connected component
remove_small_cc = DISABLE

# Override the interpolation used in training
# Options:
# 1) DEFAULT: use the interpolation method in training
# 2) NN: ignore the training interpolation, use nearest neighbor
# 3) LINEAR: ignore the training interpolation, use linear interpolation
# 4) FILTER_NN: ignore the training interpolation, use filter_nn interpolation
interpolation = DEFAULT

[fine]

# Pick the largest connected component (cc) in segmentation
# Options:
# 1) True: pick largest connected component
# 2) False: not pick largest connected component
largest_cc = True

# Remove small connected component (cc) in segmentation
# Options:
# 1) DISABLE: as the name suggests
# 2) a numerical value: the threshold size of connected component
remove_small_cc = DISABLE

# partition type in the test phase (if volume is large)
# Options:
# 1) NUM:     partition by fixed block numbers, set "block_by_num=x,y,z"
# 2) LENGTH:  partition by fixed block size(mm), set "block_by_size=x,y,z"
# 3) AXIS:    partition adaptively along one axis, set "block_by_axis=(X,Y,Z)" and "block_by_axis_memory=4" (GB)
# 4) DISABLE: no partition
block_type = LENGTH
block_by_size=51.2,51.2,51.2

# if partition type = AXIS 
# Options:
# 1) X, 2) Y, 3) Z
block_by_axis = Z

# Maximum GPU memory (GB) to use
block_by_axis_memory = 12

# block padding size
block_pad_size_mm = 0,0,0

[Zcut]

# Cut Z-Top segmentation
# Options:
# 1) CUT: cut mm from z-top
# 2) CUT_TO: cut mm from z-top to preserve at least certain mm
# 3) DISABLE: not perform cut on z-top
zcut_top = DISABLE

# Cut certain millimeters from top
zcut_top_mm = 0

# Cut certain millimeters from top to preserve at least certain mm
zcut_top_to_mm = 0


# Cut Z-Bot segmentation
# Options:
# 1) CUT: cut mm from z-bottom
# 2) CUT_TO: cut mm from z-bottom to preserve at least certain mm
# 3) DISABLE: not perform cut on z-bottom
zcut_bottom = DISABLE

# Cut certain millimeters from bottom
zcut_bottom_mm = 0

# Cut certain millimeters from bottom to preserve at least certain mm
zcut_bottom_to_mm = 0
